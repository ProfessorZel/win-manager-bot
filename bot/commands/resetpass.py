from telegram import Update, helpers
from telegram.constants import ParseMode
from telegram.ext import ContextTypes

from auth.perms_storage import check_perms
from common.config import settings
from operations.change_pass import reset_password

async def resetpassword(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not check_perms(update.effective_user.id, "resetpassword"):
        await update.message.reply_text(f"‚ö†Ô∏è –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –í–∞—à ID: {update.effective_user.id}")
        return

    if len(context.args) != 1:
        await update.message.reply_text("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /resetpassword IvanovVP")
        return

    login = context.args[0]

    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
    result = reset_password(login)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if result["success"]:
        message = f"‚úÖ –ü–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{login}' —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω\n"
        message += f"üîë –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: ||{helpers.escape_markdown(result['new_password'], 2)}||\n"
        message += f"‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ {settings.remove_new_password_msg_after} —Å–µ–∫—É–Ω–¥"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞—Ä–æ–ª–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä —É–¥–∞–ª–µ–Ω–∏—è
        sent_message = await update.message.reply_text(message, parse_mode=ParseMode.MARKDOWN_V2)

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞—Ä–æ–ª–µ–º —á–µ—Ä–µ–∑ N —Å–µ–∫—É–Ω–¥
        await context.job_queue.run_once(
            delete_password_message,
            settings.remove_new_password_msg_after,
            data={'chat_id': update.effective_chat.id, 'message_id': sent_message.message_id}
        )
    else:
        message = f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{login}'\n"
        message += f"–ü—Ä–∏—á–∏–Ω–∞: {result['message']}"
        await update.message.reply_text(message)


async def delete_password_message(context: ContextTypes.DEFAULT_TYPE):
    """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞—Ä–æ–ª–µ–º —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è"""
    job_data = context.job.data
    try:
        await context.bot.delete_message(job_data['chat_id'], job_data['message_id'])
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞—Ä–æ–ª–µ–º: {e}")